name: Lint and Deploy

on:
  push:
    branches:
      - master

env:
  HOSTNAME: asia.gcr.io
  REGION: asia-northeast1

jobs:
  precheck:
    runs-on: ubuntu-latest

    outputs:
      is_app_changed: ${{ steps.is_app_changed.outputs.result }}
      is_service_changed: ${{ steps.is_service_changed.outputs.result }}
      is_infra_changed: ${{ steps.is_infra_changed.outputs.result }}

    steps:
      - uses: actions/checkout@v2

      - id: file_changes
        name: Collect changed files
        uses: trilom/file-changes-action@v1.2.4

      - id: is_app_changed
        uses: actions/github-script@v2
        env:
          FILES_CHANGED: ${{ steps.file_changes.outputs.files }}
        with:
          script: |
            const files = JSON.parse(process.env.FILES_CHANGED);
            return files.some((file) => file.startsWith('program/nextjs'));

      - id: is_service_changed
        uses: actions/github-script@v2
        env:
          FILES_CHANGED: ${{ steps.file_changes.outputs.files }}
        with:
          script: |
            const files = JSON.parse(process.env.FILES_CHANGED);
            return files.some((file) => file.startsWith('program/backup-service'));

      - id: is_infra_changed
        uses: actions/github-script@v2
        env:
          FILES_CHANGED: ${{ steps.file_changes.outputs.files }}
        with:
          script: |
            const files = JSON.parse(process.env.FILES_CHANGED);
            return files.some((file) => file.startsWith('program/infra'));

  lint-app:
    needs: precheck
    if: "fromJson(needs.precheck.outputs.is_app_changed) && !contains(github.event.head_commit.message, '[skip ci]')"
    name: Lint app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run Hadolint
        uses: brpaz/hadolint-action@v1.3.1
        with:
          dockerfile: ./program/backup-service/Dockerfile

      - name: Run ESLint
        run: yarn && yarn lint
        working-directory: ./program/nextjs

  lint-service:
    needs: precheck
    if: "fromJson(needs.precheck.outputs.is_service_changed) && !contains(github.event.head_commit.message, '[skip ci]')"
    name: Lint service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run Hadolint
        uses: brpaz/hadolint-action@v1.3.1
        with:
          dockerfile: ./program/backup-service/Dockerfile

  lint-infra:
    needs: precheck
    if: "fromJson(needs.precheck.outputs.is_infra_changed) && !contains(github.event.head_commit.message, '[skip ci]')"
    name: Lint infra
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: terraform fmt -check -diff
        working-directory: ./program/infra

  deploy-app:
    if: "!contains(github.event.head_commit.message, '[skip cd]')"
    name: Deploy "alive" Docker image
    needs: lint-app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create .env
        run: |
          echo "FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env
          echo "FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "FIREBASE_DATABASE_URL=${{ secrets.FIREBASE_DATABASE_URL }}" >> .env
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
        working-directory: ./program/nextjs

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set run/platform managed
          gcloud config set run/region ${REGION}
          gcloud auth configure-docker

      - name: Build Docker image
        run: |
          docker build \
            -t ${{ env.HOSTNAME }}/${{ secrets.GCP_PROJECT_ID }}/cloudrun/alive \
            .
        working-directory: ./program/nextjs

      - name: Publish Docker image
        run: |
          docker push ${{ env.HOSTNAME }}/${{ secrets.GCP_PROJECT_ID }}/cloudrun/alive:latest

      - name: Deploy Docker image
        run: |
          gcloud run deploy \
            alive \
            --image ${{ env.HOSTNAME }}/${{ secrets.GCP_PROJECT_ID }}/cloudrun/alive:latest \
            --allow-unauthenticated

  deploy-service:
    if: "!contains(github.event.head_commit.message, '[skip cd]')"
    name: Deploy "alive-backup-service" Docker image
    needs: lint-service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set run/platform managed
          gcloud config set run/region ${REGION}
          gcloud auth configure-docker

      - name: Build Docker image
        run: |
          docker build \
            -t ${{ env.HOSTNAME }}/${{ secrets.GCP_PROJECT_ID }}/cloudrun/alive-backup-service \
            .
        working-directory: ./program/backup-service

      - name: Publish Docker image
        run: |
          docker push ${{ env.HOSTNAME }}/${{ secrets.GCP_PROJECT_ID }}/cloudrun/alive-backup-service:latest

      - name: Deploy Docker image
        run: |
          gcloud run deploy \
            alive-backup-service \
            --image ${{ env.HOSTNAME }}/${{ secrets.GCP_PROJECT_ID }}/cloudrun/alive-backup-service:latest \
            --allow-unauthenticated
